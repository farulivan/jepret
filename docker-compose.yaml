version: "3.8"

services:
  localstack:
    image: localstack/localstack:1.2.0
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEFAULT_REGION=eu-west-1
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - USE_SINGLE_REGION=true
      - BUCKET_NAME=example-bucket
    volumes:
      - ./init-localstack.sh:/docker-entrypoint-initaws.d/init-localstack.sh
      - localstack-data:/tmp/localstack
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:4566/health" ]
      interval: 30s
      timeout: 10s
      retries: 3

  server:
    image: 'nginx:stable-alpine'
    ports:
      - '8000:80'
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_REGION=eu-west-1
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_BUCKET_NAME=example-bucket
    volumes:
      - .:/var/www/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - php
      - mysql
      - localstack

  php:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - .:/var/www/html:delegated

  mysql:
    image: mysql:5.7
    platform: linux/x86_64
    ports:
      - '3306:3306'
    environment:
      MYSQL_DATABASE: jepret
      MYSQL_USER: jepret
      MYSQL_PASSWORD: secret
      MYSQL_ALLOW_EMPTY_PASSWORD: 1
    volumes:
      - mysql-data:/var/lib/mysql

  composer:
    image: composer:latest
    working_dir: /var/www/html
    volumes:
      - .:/var/www/html
    command: [ "composer" ]

  artisan:
    build:
      context: .
      dockerfile: dockerfiles/php.dockerfile
    volumes:
      - .:/var/www/html
    entrypoint: [ "php", "/var/www/html/artisan" ]
    depends_on:
      - php
      - mysql

  npm:
    build:
      context: .
      dockerfile: ./dockerfiles/npm.dockerfile
    working_dir: /var/www/html/client
    ports:
      - '3000:3000'
    entrypoint: [ "npm" ]
    volumes:
      - ./client:/var/www/html/client

volumes:
  mysql-data:
  localstack-data:
